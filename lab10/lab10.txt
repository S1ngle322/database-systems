pre-ex:
CREATE DATABASE lab10;
\c lab10
CREATE TABLE account (id serial, username varchar, fullname varchar, balance int, group_id int);
INSERT INTO account(username, fullname, balance, group_id) VALUES 
('jones', 'Alice Jones', 82, 1),
('bitdiddl', 'Ben Bitdiddle', 65, 1),
('mike', 'Michael Dole', 73, 2),
('alyssa', 'Alyssa P. Hacker', 79, 3),
('bbrown', 'Bob Brown', 100, 3);


Ex1:
1. in first terminal:
START TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
SELECT * FROM account;
 id | username |     fullname     | balance | group_id
----+----------+------------------+---------+----------
  1 | jones    | Alice Jones      |      82 |        1
  2 | bitdiddl | Ben Bitdiddle    |      65 |        1
  3 | mike     | Michael Dole     |      73 |        2
  4 | alyssa   | Alyssa P. Hacker |      79 |        3
  5 | bbrown   | Bob Brown        |     100 |        3

2. in second terminal:
START TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
UPDATE account SET username='ajones' WHERE fullname='Alice Jones';

3. in first terminal:
SELECT * FROM account;
 id | username |     fullname     | balance | group_id
----+----------+------------------+---------+----------
  1 | jones    | Alice Jones      |      82 |        1
  2 | bitdiddl | Ben Bitdiddle    |      65 |        1
  3 | mike     | Michael Dole     |      73 |        2
  4 | alyssa   | Alyssa P. Hacker |      79 |        3
  5 | bbrown   | Bob Brown        |     100 |        3

4. in second terminal:
SELECT * FROM account;
 id | username |     fullname     | balance | group_id
----+----------+------------------+---------+----------
  2 | bitdiddl | Ben Bitdiddle    |      65 |        1
  3 | mike     | Michael Dole     |      73 |        2
  4 | alyssa   | Alyssa P. Hacker |      79 |        3
  5 | bbrown   | Bob Brown        |     100 |        3
  1 | ajones   | Alice Jones      |      82 |        1


Terminals have different information because in Postgres READ UNCOMMITED is same as READ COMMITED, and transaction of terminal 2 is not commited yet.


5. in second terminal: 
COMMIT;

Now terminals contain same information.


6. in second terminal:
BEGIN;

7. in first terminal:
UPDATE account SET balance=balance+10 WHERE fullname='Alice Jones';

8. in second terminal:
UPDATE account SET balance=balance+20 WHERE fullname='Alice Jones';

I received no output of second terminal by this moment.

9. in first terminal:
END;

Now Alice's balance is 112.

10.in second terminal:
ROLLBACK;

it's fine, her balance is 92.





Ex2:

with READ COMMITED:

1:  START TRANSACTION ISOLATION LEVEL READ COMMITTED;
2:  START TRANSACTION ISOLATION LEVEL READ COMMITTED;
1: SELECT * FROM account WHERE group_id=2;
 id | username |   fullname   | balance | group_id
----+----------+--------------+---------+----------
  3 | mike     | Michael Dole |      73 |        2
2: UPDATE account SET group_id=2 WHERE fullname='Bob Brown';
1: SELECT * FROM account WHERE group_id=2;
 id | username |   fullname   | balance | group_id
----+----------+--------------+---------+----------
  3 | mike     | Michael Dole |      73 |        2
1: UPDATE account SET balance=balance+15 WHERE group_id=2;
1: COMMIT;
2: COMMIT;

(update bob's group back to 3.)
with REPEATABLE READ:

1:  START TRANSACTION ISOLATION LEVEL REPEATABLE READ;
2:  START TRANSACTION ISOLATION LEVEL REPEATABLE READ;
1: SELECT * FROM account WHERE group_id=2;
 id | username |   fullname   | balance | group_id
----+----------+--------------+---------+----------
  3 | mike     | Michael Dole |      88|        2
2: UPDATE account SET group_id=2 WHERE fullname='Bob Brown';
1: SELECT * FROM account WHERE group_id=2;
 id | username |   fullname   | balance | group_id
----+----------+--------------+---------+----------
  3 | mike     | Michael Dole |      88|        2
1: UPDATE account SET balance=balance+15 WHERE group_id=2;
1: COMMIT;
2: COMMIT;

